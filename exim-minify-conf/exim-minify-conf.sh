#!/bin/bash
#
# This script generates a minified Exim configuration file.
#
# Usage: Run without any arguments to see usage
#
# Includes are processed by M4 (http://www.gnu.org/software/m4/)
#
# Copyright (c) 2011 Lance Lovette. All rights reserved.
# Licensed under the BSD License.
# See the file LICENSE.txt for the full license text.
#
# Available from https://github.com/lovette/exim-tools

CMDPATH=$(readlink -f "$0")
CMDNAME=$(basename "$CMDPATH")
CMDDIR=$(dirname "$CMDPATH")
CMDARGS=$@

EXIMTOOL_VER="1.0.0"
EXIMBIN=/usr/sbin/exim
M4BIN=/usr/bin/m4

OPT_INCLUDES=1
OPT_STRIPCOMMENTS=1

##########################################################################
# Functions

# Print version and exit
function version()
{
	echo "exim-minify-conf $EXIMTOOL_VER"
	echo
	echo "Copyright (C) 2011 Lance Lovette"
	echo "Licensed under the BSD License."
	echo "See the distribution file LICENSE.txt for the full license text."
	echo
	echo "Written by Lance Lovette <https://github.com/lovette>"

	exit 0
}

# Print usage and exit
function usage()
{
	echo "Replace OUTFILE with a minified version of Exim configuration INFILE."
	echo "If OUTFILE is not specified, the default Exim configure_file path is used."
	echo "Set OUTFILE to '-' to write new configuration to stdout."
	echo
	echo "Usage: exim-minify-conf [OPTION]... INFILE [OUTFILE|-]"
	echo
	echo "Options:"
	echo "  -c             Do not remove comments and blank lines"
	echo "  -h, --help     Show this help and exit"
	echo "  -i             Do not process includes"
	echo "  -V, --version  Print version and exit"
	echo
	echo "Report bugs to <https://github.com/lovette/exim-tools/issues>"

	exit 0
}

function onexit()
{
	[ -f "$TMPINFILE" ] && /bin/rm -f "$TMPINFILE"
	[ -f "$TMPOUTFILE" ] && /bin/rm -f "$TMPOUTFILE"
}

##########################################################################
# Main

# Check for usage longopts
case "$1" in
	"--help"    ) usage;;
	"--version" ) version;;
esac

# Parse command line options
while getopts "chiV" opt
do
	case $opt in
	c  ) OPT_STRIPCOMMENTS=0;;
	h  ) usage;;
	i  ) OPT_INCLUDES=0;;
	V  ) version;;
	\? ) echo "Try '$CMDNAME --help' for more information."; exit 1;;
	esac
done

shift $(($OPTIND - 1))
INFILE="$1"
OUTFILE="$2"

if [ -z "$INFILE" ]; then
	echo "$CMDNAME: missing option -- an input file must be specified"
	echo "Try '$CMDNAME --help' for more information."
	exit 1
fi

# Confirm INFILE exists and is readable
[ ! -f "$INFILE" ] && echo "$INFILE: file does not exist" && exit 1
[ ! -r "$INFILE" ] && echo "$INFILE: cannot read from file" && exit 1

# If no output file is specified, see if we can default to exim.conf
if [ -z "$OUTFILE" ]; then
	CONFFILE=$("$EXIMBIN" -bP configure_file 2>&1 | grep "^/" | cut -d= -f2 | tr -d " ")
	[ -z "$CONFFILE" ] && echo "Cannot determine Exim configuration file path (exim -bP configure_file)" && exit 1
	[ ! -f "$CONFFILE" ] && echo "Exim configuration path is not a file ($CONFFILE)" && exit 1
	echo "Replacing $CONFFILE with minified version" >&2
	OUTFILE="$CONFFILE"
fi

# Confirm we can write to OUTFILE
if [ "$OUTFILE" != "-" ] && [ -e "$OUTFILE" ]; then
	[ -d "$OUTFILE" ] && echo "$OUTFILE: output path cannot be a directory" && exit 1
	[ ! -w "$OUTFILE" ] && echo "$OUTFILE: cannot write to file" && exit 1
fi

# We need to know if any of our pipe commands fail, not just the last one
set -o pipefail

TMPFILESPEC=$(basename "$CMDNAME" ".sh")"="$(basename "$INFILE")".XXXXXX"
TMPINFILE=$(mktemp -t "$TMPFILESPEC") || exit 1
TMPOUTFILE=$(mktemp -t "$TMPFILESPEC") || exit 1

# Remove temp files on exit
trap "onexit" EXIT

cat "$INFILE" > "$TMPINFILE"
[ $? -ne 0 ] &&	echo "An error occured" && exit 1

# Process includes with M4 if possible. Nested includes are supported.
if [ $OPT_INCLUDES -eq 1 ]; then
	if [ -f "$M4BIN" ] && [ -x "$M4BIN" ]; then
		while grep -q "^[[:space:]]*\.include" "$TMPINFILE"
		do
			TMPM4FILE=$(mktemp -t "$TMPFILESPEC")
			(sed -r "s/^[[:space:]]*\.include (.+)/include(\1)/" "$TMPINFILE" | $M4BIN) > "$TMPM4FILE"
			[ $? -ne 0 ] &&	echo "An error occured" && exit 1
			/bin/rm -f "$TMPINFILE"
			TMPINFILE="$TMPM4FILE"
		done
	else
		echo "This tool requires M4 to process includes, confirm it is installed as $M4BIN, or use -i switch" >&2
	fi
fi

# Generate the new configuration
(
	echo "# DO NOT EDIT THIS FILE MANUALLY"
	echo "#"
	echo "# Regenerate this file with:"
	echo "# $CMDNAME $CMDARGS"
	echo "#"
	echo "# After you make any changes restart Exim daemon with exim-hup"
	echo "#"
	echo "# This file was generated "$(date)
	echo

	if [ $OPT_STRIPCOMMENTS -eq 1 ]; then
		grep -v "^[[:space:]]*#" "$TMPINFILE" | \
		grep -v "^[[:space:]]*$" | \
		sed -r "s/^(begin )/\n\1/"
	else
		cat "$TMPINFILE"
	fi

) > "$TMPOUTFILE"

[ $? -ne 0 ] &&	echo "An error occured" && exit 1

if [ "$OUTFILE" = "-" ]; then
	cat "$TMPOUTFILE"
	RETVAL=$?
else
	/bin/mv -f "$TMPOUTFILE" "$OUTFILE"
	RETVAL=$?
fi

exit $RETVAL
